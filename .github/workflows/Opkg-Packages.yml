name: Actions opkg-utils

on:
  workflow_call:
  schedule:
    #- cron: '*/5 * * * *'  # 每5分钟一次
    - cron: '0 0 */2 * *'  # 每2天运行一次
  repository_dispatch:
  workflow_dispatch:

jobs:
  opkg:
    name: Opkg
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0
    
    - name: Initialization environment
      run: |
        #sudo -E apt-get -qq -y update
        #sudo -E apt-get -qq -y install python3 gzip
    
    - name: Set Git identity
      run : |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        sudo timedatectl set-timezone "Asia/Shanghai"
    
    - name: Git Clone Repositories
      id: git_clone
      run : |
        test -d "GitHub" || mkdir -p "GitHub" 
        cd GitHub && git clone https://3wlh:${{ secrets.TOKEN_3WLH }}@github.com/3wlh/OpenWrt_Packages
        test -d "OpenWrt_Packages" && cd "OpenWrt_Packages"
        test -f "mime.pub" || echo -e "${{ secrets.PUD }}" > mime.pub
        if [[ ! -d "opkg-utils" ]]; then
          git clone git://git.yoctoproject.org/opkg-utils
          test -d "opkg-utils" && rm -rf opkg-utils/.git
        fi
        if [[ -f bin/usign ]]; then
          cp -f bin/usign /usr/local/bin/usign
        else
          git clone https://github.com/openwrt/usign.git
          sudo -E apt-get -qq -y install cmake
          echo "usign=fail" >> $GITHUB_OUTPUT
        fi
    
    - name: Install usign
      if: steps.git_clone.outputs.usign == 'fail'
      run : |
        chmod -R 755 "${{ github.workspace }}/GitHub/OpenWrt_Packages/usign" && \
        cd ${{ github.workspace }}/GitHub/OpenWrt_Packages/usign && \
        cmake . && make && sudo make install
        test -d "${{ github.workspace }}/GitHub/OpenWrt_Packages/bin" || mkdir -p "${{ github.workspace }}/GitHub/OpenWrt_Packages/bin"
        cp -f /usr/local/bin/usign ${{ github.workspace }}/GitHub/OpenWrt_Packages/bin
        rm -rf ${{ github.workspace }}/GitHub/OpenWrt_Packages/usign
        
    - name: Install opkg-utils
      run : |
        chmod -R 755 "${{ github.workspace }}/GitHub/OpenWrt_Packages/opkg-utils" && \
        cd ${{ github.workspace }}/GitHub/OpenWrt_Packages/opkg-utils && \
        make && sudo make install
        
    - name: Create Script
      run : |
        chmod -R 755 "$(pwd)/.github/.shell"
        for file in $(pwd)/.github/.shell/* ;do
          if [[ -f ${file} ]];then
            # sudo chmod 755 "${file}"
            name=$(basename ${file} .sh)
            sudo ln -s ${file} /bin/${name}
            echo "$(date '+%Y-%m-%d %H:%M:%S') - ${name} 创建OK."
          fi
        done
        
    - name: Download aarch64_generic Packages
      run : |
        mkdir -p "/tmp/aarch64_generic" && cd "/tmp/aarch64_generic"
        test -d "$(pwd)/packages/diy_packages" || mkdir -p "$(pwd)/packages/diy_packages"
        chmod +x "${{ github.workspace }}/.github/.packages/aarch64_generic.sh"
        bash ${{ github.workspace }}/.github/.packages/aarch64_generic.sh \
        "${{ github.workspace }}/GitHub/OpenWrt_Packages"
        test -d "${{ github.workspace }}/GitHub/OpenWrt_Packages/packages/aarch64_generic" || \
        mkdir -p "${{ github.workspace }}/GitHub/OpenWrt_Packages/packages/aarch64_generic"
        find $(pwd) -type f -name "*.[ia]pk" -exec mv -f {} "${{ github.workspace }}/GitHub/OpenWrt_Packages/packages/aarch64_generic" \;
    
    - name: Download x86_64 Packages
      run : |
        mkdir -p "/tmp/x86_64" && cd "/tmp/x86_64"
        test -d "$(pwd)/packages/diy_packages" || mkdir -p "$(pwd)/packages/diy_packages"
        Segmentation "https://dl.openwrt.ai/releases/24.10/packages/x86_64/kiddin9/" \
        "${{ github.workspace }}/GitHub/OpenWrt_Packages/packages/x86_64" \
        "luci-app-unishare unishare webdav2 luci-app-v2ray-server sunpanel luci-app-sunpanel \
        taskd luci-lib-xterm luci-lib-taskd luci-app-store"
        Passwall "x86_64" "24.10" "${{ github.workspace }}/GitHub/OpenWrt_Packages"
        Openlist2 "x86_64" "${{ github.workspace }}/GitHub/OpenWrt_Packages"
        Nikki "x86_64" "${{ github.workspace }}/GitHub/OpenWrt_Packages"
        test -d "${{ github.workspace }}/GitHub/OpenWrt_Packages/packages/x86_64" || \
        mkdir -p "${{ github.workspace }}/GitHub/OpenWrt_Packages/packages/x86_64"
        find $(pwd) -type f -name "*.[ia]pk" -exec mv -f {} "${{ github.workspace }}/GitHub/OpenWrt_Packages/packages/x86_64" \;      
            
    - name: Create Repositories index 
      run : |  
        # gzip -k9 Packages
        cd ${{ github.workspace }}/GitHub/OpenWrt_Packages
        echo -e "${{ secrets.KEY }}" > /tmp/mime.key
        [[ -d packages/aarch64_generic ]] && opkg-make-index packages/aarch64_generic > packages/aarch64_generic/Packages
        usign -S -m packages/aarch64_generic/Packages -s /tmp/mime.key -x packages/aarch64_generic/Packages.sig
        [[ -d packages/x86_64 ]] && opkg-make-index packages/x86_64 > packages/x86_64/Packages
        usign -S -m packages/x86_64/Packages -s /tmp/mime.key -x packages/x86_64/Packages.sig
        [[ -f packages/aarch64_generic/Packages ]] && gzip -9c packages/aarch64_generic/Packages > packages/aarch64_generic/Packages.gz
        [[ -f packages/x86_64/Packages ]] && gzip -9c packages/x86_64/Packages > packages/x86_64/Packages.gz
        [[ -f Packages.stamps ]] && rm -f Packages.stamps
        
    - name: Git Erase Commits
      run : |
        cd ${{ github.workspace }}/GitHub/OpenWrt_Packages
        # 添加所有文件
        # git add -A >/dev/unll
        git add -A
        # 提交更改
        git commit -am "update $(date +%Y-%m-%d" "%H:%M:%S)"
        # 清理优化Git仓库
        # git gc --prune=now --aggressive >/dev/unll
        # 强制提交到远程仓库
        git push